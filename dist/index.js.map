{"version":3,"file":"index.js","sources":["../src/_utils.js","../src/isOld.js","../src/specials.js","../src/isSpecial.js","../src/isValid.js","../src/getCounter.js","../src/getNumber.js","../src/getSpecialCode.js","../src/getSpecialName.js","../src/provinces.js","../src/getProvinceCode.js","../src/getProvinceName.js","../src/parse.js"],"sourcesContent":["/**\n * @param {string} str\n */\nexport function _partsSpecial(str) {\n  const cleaned = str.replace(/^[\\s]*([CMEDGPNATFSHMORW]{1,5})[\\W]*([0-9]{4})[\\s]*$/i, \"$1,$2\");\n\n  return cleaned.split(\",\");\n}\n\n/**\n * @param {string} str\n */\nexport function _partsOld(str) {\n  const cleaned = str.replace(\n    /^[\\s]*([A-Z]{1,3})[^A-Z0-9]*([0-9]{4})[^A-Z0-9]*([A-Z]{2})[\\s]*$/i,\n    \"$1,$2,$3\"\n  );\n\n  return cleaned.split(\",\");\n}\n\n/**\n * @param {string} str\n */\nexport function _partsNew(str) {\n  const cleaned = str.replace(\n    /^[\\s]*([0-9]{4})[^A-Z0-9]*([BCDFGHJKLMNPRSTVWXYZ]{3})[\\s]*$/i,\n    \"$1,$2\"\n  );\n\n  return cleaned.split(\",\");\n}\n","import { _partsOld } from \"./_utils\";\n\n/**\n * Returns true if is a valid (old system 1971-2000) car plate\n * @param {string} value\n * @returns {boolean}\n * @since 0.0.2\n * @example\n * isOld(\"GI-1234-CS\"); // => true\n */\nfunction isOld(value) {\n  const str = !value ? \"\" : value;\n  const cleaned = _partsOld(str).join(\"\");\n\n  if (cleaned.length < 7 || cleaned.length > 9) {\n    return false;\n  }\n\n  return /^[A-Z]{1,3}[0-9]{4}[A-Z]{2}$/i.test(cleaned);\n}\n\nexport { isOld };\n","export const SPECIALS = {\n  CME: \"Corps of the Mossos d'Esquadra\",\n  DGP: \"Spanish Police\",\n  CNP: \"Spanish Police\",\n  E: \"Autonomous police force of the Basque Country\",\n  EA: \"Air Force\",\n  ET: \"Spanish Army\",\n  FAE: \"Allied Forces in Spain\",\n  FN: \"Spanish Navy\",\n  GSH: \"Colonial police on Sahara\",\n  PGC: \"Spanish civil guard\",\n  MF: \"Public Works Ministry\",\n  MMA: \"Environment Ministry\",\n  MOP: \"Public Works Ministry\",\n  PME: \"State owned vehicles\",\n  PMM: \"State owned vehicles, on a Ministry\",\n  CROWN: \"King's Car\"\n};\n","import { _partsSpecial } from \"./_utils\";\nimport { SPECIALS } from \"./specials\";\n\n/**\n * Returns true if is a valid spacial car plate\n * @param {string} value\n * @returns {boolean}\n * @since 0.0.7\n * @example\n * isSpecial(\"CME 2342\"); // => true\n * isSpecial(\"E 1660\"); // => true\n */\nfunction isSpecial(value) {\n  const str = !value ? \"\" : value;\n  const [code, num] = _partsSpecial(str);\n  const cleaned = `${code}${num}`;\n\n  if (cleaned.length < 5 || cleaned.length > 9) {\n    return false;\n  }\n\n  if (!SPECIALS[code.toUpperCase()]) {\n    return false;\n  }\n\n  return /^[CMEDGPNATFSHMORW]{1,5}[0-9]{4}$/i.test(cleaned);\n}\n\nexport { isSpecial };\n","import { _partsNew } from \"./_utils\";\nimport { isOld } from \"./isOld\";\nimport { isSpecial } from \"./isSpecial\";\n\n/**\n * Returns true if is a valid (post year 2000) car plate\n * @param {string} value\n * @returns {boolean}\n * @since 0.0.1\n * @example\n * isValid(\"2345BCF\"); // => true\n */\nfunction isValid(value) {\n  if (isOld(value)) {\n    return true;\n  }\n\n  if (isSpecial(value)) {\n    return true;\n  }\n\n  const str = !value ? \"\" : value;\n  const cleaned = _partsNew(str).join(\"\");\n\n  if (cleaned.length !== 7) {\n    return false;\n  }\n\n  return /^[0-9]{4}[BCDFGHJKLMNPRSTVWXYZ]{3}$/i.test(cleaned);\n}\n\nexport { isValid };\n","import { isOld } from \"./isOld\";\nimport { isValid } from \"./isValid\";\nimport { _partsOld, _partsNew } from \"./_utils\";\n\n/**\n *\n * @param {string} value\n * @returns {string}\n * @since 0.0.5\n * @example\n * getCounter(\"GI-1234-CS\"); // => \"CS\"\n * getCounter(\"2345BCF\"); // => \"CS\"\n */\nfunction getCounter(value) {\n  const str = !value ? \"\" : value;\n\n  if (isOld(str) === true) {\n    const [, , counter] = _partsOld(str);\n    return counter;\n  } else if (isValid(str)) {\n    const [, counter] = _partsNew(str);\n    return counter;\n  }\n\n  return null;\n}\n\nexport { getCounter };\n","import { isOld } from \"./isOld\";\nimport { isValid } from \"./isValid\";\nimport { isSpecial } from \"./isSpecial\";\nimport { _partsNew, _partsOld, _partsSpecial } from \"./_utils\";\n\n/**\n *\n * @param {string} value\n * @returns {number}\n * @since 0.0.5\n * @example\n * getNumber(\"2345BCF\"); // => \"2345\"\n * getNumber(\"GI-1234-CS\"); // => \"1234\"\n */\nfunction getNumber(value) {\n  const str = !value ? \"\" : value;\n  let n;\n\n  if (isOld(str) === true) {\n    const [, num] = _partsOld(str);\n    n = num;\n  } else if (isSpecial(str) === true) {\n    const [, num] = _partsSpecial(str);\n    n = num;\n  } else if (isValid(str)) {\n    const [num] = _partsNew(str);\n    n = num;\n  } else {\n    return null;\n  }\n\n  return parseInt(n, 10)\n    .toString()\n    .padStart(4, \"0\");\n}\n\nexport { getNumber };\n","import { SPECIALS } from \"./specials\";\nimport { isSpecial } from \"./isSpecial\";\nimport { _partsSpecial } from \"./_utils\";\n\n/**\n * Returns the special code for a valid car plate\n * @param {string} value\n * @returns {string}\n * @since 0.0.7\n * @example\n * getSpecialCode(\"DGP-1234\"); // => \"DGP\"\n */\nfunction getSpecialCode(value) {\n  const str = !value ? \"\" : value;\n\n  if (!isSpecial(str)) {\n    return null;\n  }\n\n  const [code] = _partsSpecial(str);\n\n  return code ? (SPECIALS[code.toUpperCase()] ? code.toUpperCase() : null) : null;\n}\n\nexport { getSpecialCode };\n","import { SPECIALS } from \"./specials\";\nimport { getSpecialCode } from \"./getSpecialCode\";\n\n/**\n * Returns the special name for a valid car plate\n * @param {string} value\n * @returns {string}\n * @since 0.0.7\n * @example\n * getSpecialCode(\"CME1234\"); // => \"Corps of the Mossos d'Esquadra\"\n */\nfunction getSpecialName(value) {\n  const str = !value ? \"\" : value;\n  const code = getSpecialCode(str);\n\n  return code ? SPECIALS[code.toUpperCase()] : null;\n}\n\nexport { getSpecialName };\n","export const PROVINCES = {\n  A: \"Province of Alicante\",\n  AB: \"Province of Albacete\",\n  AL: \"Province of Almería\",\n  AV: \"Province of Ávila\",\n  B: \"Province of Barcelona\",\n  BA: \"Province of Badajoz\",\n  BI: \"Bilbao\",\n  BU: \"Province of Burgos\",\n  C: \"Province of A Coruña\",\n  CA: \"Province of Cádiz\",\n  CC: \"Province of Cáceres\",\n  CE: \"Ceuta\",\n  CO: \"Province of Córdoba\",\n  CR: \"Province of Ciudad Real\",\n  CS: \"Castelló\",\n  CU: \"Province of Cuenca\",\n  FP: \"Bioko\",\n  GC: \"Province of Las Palmas\",\n  GE: \"Gerona (Girona)\",\n  GI: \"Province of Girona\",\n  GR: \"Province of Granada\",\n  GU: \"Province of Guadalajara\",\n  H: \"Province of Huelva\",\n  HU: \"Province of Huesca\",\n  IF: \"Ifni\",\n  J: \"Province of Jaén\",\n  L: \"Province of Lleida\",\n  LE: \"Province of León\",\n  LO: \"Logroño\",\n  LR: \"La Rioja\",\n  LU: \"Province of Lugo\",\n  M: \"Community of Madrid\",\n  MA: \"Province of Málaga\",\n  ML: \"Melilla\",\n  MU: \"Region of Murcia\",\n  NA: \"Navarre\",\n  O: \"Oviedo\",\n  OU: \"Province of Ourense\",\n  P: \"Province of Palencia\",\n  PM: \"Palma, Majorca\",\n  PO: \"Province of Pontevedra\",\n  RM: \"Rio Muni\",\n  S: \"Santander\",\n  SA: \"Province of Salamanca\",\n  SE: \"Province of Seville\",\n  SG: \"Province of Segovia\",\n  SO: \"Province of Soria\",\n  SS: \"Donostia\",\n  T: \"Province of Tarragona\",\n  TE: \"Province of Teruel\",\n  TF: \"Province of Santa Cruz de Tenerife\",\n  TO: \"Province of Toledo\",\n  V: \"Province of Valencia\",\n  VA: \"Province of Valladolid\",\n  VI: \"Vitoria\",\n  Z: \"Province of Zaragoza\",\n  ZA: \"Province of Zamora\"\n};\n","import { PROVINCES } from \"./provinces\";\nimport { isOld } from \"./isOld\";\nimport { _partsOld } from \"./_utils\";\n\n/**\n * Returns the province code for a valid car plate in the old system (1971-2000)\n * @param {string} value\n * @returns {string}\n * @since 0.0.5\n * @example\n * getProvinceCode(\"GI-1234-CS\"); // => \"GI\"\n */\nfunction getProvinceCode(value) {\n  const str = !value ? \"\" : value;\n\n  if (!isOld(str)) {\n    return null;\n  }\n\n  const [code] = _partsOld(str);\n\n  return code ? (PROVINCES[code.toUpperCase()] ? code.toUpperCase() : null) : null;\n}\n\nexport { getProvinceCode };\n","import { PROVINCES } from \"./provinces\";\nimport { getProvinceCode } from \"./getProvinceCode\";\n\n/**\n * Returns the province name for a valid car plate in the old system (1971-2000)\n * @param {string} value\n * @returns {string}\n * @since 0.0.5\n * @example\n * getProvinceName(\"GI-1234-CS\"); // => \"Province of Girona\"\n */\nfunction getProvinceName(value) {\n  const str = !value ? \"\" : value;\n  const code = getProvinceCode(str);\n\n  return code ? PROVINCES[code.toUpperCase()] : null;\n}\n\nexport { getProvinceName };\n","import { isValid } from \"./isValid\";\nimport { isOld } from \"./isOld\";\nimport { isSpecial } from \"./isSpecial\";\nimport { getProvinceName } from \"./getProvinceName\";\nimport { getProvinceCode } from \"./getProvinceCode\";\nimport { getCounter } from \"./getCounter\";\nimport { getNumber } from \"./getNumber\";\nimport { getSpecialCode } from \"./getSpecialCode\";\nimport { getSpecialName } from \"./getSpecialName\";\n\nfunction _parseNew(str) {\n  const parsed = {};\n  parsed.isOld = false;\n  parsed.provinceName = null;\n  parsed.provinceCode = null;\n  parsed.specialCode = null;\n  parsed.specialName = null;\n  parsed.counter = getCounter(str);\n  parsed.number = getNumber(str);\n  return parsed;\n}\n\nfunction _parseOld(str) {\n  const parsed = {};\n  parsed.isOld = true;\n  parsed.provinceName = getProvinceName(str);\n  parsed.provinceCode = getProvinceCode(str);\n  parsed.specialCode = null;\n  parsed.specialName = null;\n  parsed.counter = getCounter(str);\n  parsed.number = getNumber(str);\n  return parsed;\n}\n\nfunction _parseSpecial(str) {\n  const parsed = {};\n  parsed.isOld = false;\n  parsed.provinceName = null;\n  parsed.provinceCode = null;\n  parsed.specialCode = getSpecialCode(str);\n  parsed.specialName = getSpecialName(str);\n  parsed.counter = null;\n  parsed.number = getNumber(str);\n  parsed.isSpecial = true;\n  return parsed;\n}\n\n/**\n * Returns an object containing information about the plate\n * @param {string} value\n * @returns {boolean}\n * @since 0.0.5\n * @example\n * parse(\"2345BCF\"); // => { isSpecial: false, isOld: false, provinceCode: null, provinceName: null, number: 2345, counter: \"BCF\" }\n * parse(\"GI2345BC\"); // => { isSpecial: false, isOld: true, provinceCode: \"GI\", provinceName: \"Province of Girona\", number: 2345, counter: \"BC\" }\n */\nfunction parse(value) {\n  const str = !value ? \"\" : value;\n  const parsed = {\n    isSpecial: false // TODO: not implemented\n  };\n\n  if (isOld(str) === true) {\n    return {\n      ...parsed,\n      ..._parseOld(str)\n    };\n  } else if (isSpecial(str) === true) {\n    return {\n      ...parsed,\n      ..._parseSpecial(str)\n    };\n  } else if (isValid(str) === true) {\n    return {\n      ...parsed,\n      ..._parseNew(str)\n    };\n  }\n\n  return null;\n}\n\nexport { parse };\n"],"names":["_partsSpecial","str","cleaned","replace","split","_partsOld","_partsNew","isOld","value","join","length","test","SPECIALS","CME","DGP","CNP","E","EA","ET","FAE","FN","GSH","PGC","MF","MMA","MOP","PME","PMM","CROWN","isSpecial","code","num","toUpperCase","isValid","getCounter","counter","getNumber","n","parseInt","toString","padStart","getSpecialCode","getSpecialName","PROVINCES","A","AB","AL","AV","B","BA","BI","BU","C","CA","CC","CE","CO","CR","CS","CU","FP","GC","GE","GI","GR","GU","H","HU","IF","J","L","LE","LO","LR","LU","M","MA","ML","MU","NA","O","OU","P","PM","PO","RM","S","SA","SE","SG","SO","SS","T","TE","TF","TO","V","VA","VI","Z","ZA","getProvinceCode","getProvinceName","_parseNew","parsed","provinceName","provinceCode","specialCode","specialName","number","_parseOld","_parseSpecial","parse"],"mappings":";;;;;;;;;;;EAAA;;;AAGA,EAAO,SAASA,aAAT,CAAuBC,GAAvB,EAA4B;EACjC,MAAMC,OAAO,GAAGD,GAAG,CAACE,OAAJ,CAAY,uDAAZ,EAAqE,OAArE,CAAhB;EAEA,SAAOD,OAAO,CAACE,KAAR,CAAc,GAAd,CAAP;EACD;EAED;;;;AAGA,EAAO,SAASC,SAAT,CAAmBJ,GAAnB,EAAwB;EAC7B,MAAMC,OAAO,GAAGD,GAAG,CAACE,OAAJ,CACd,mEADc,EAEd,UAFc,CAAhB;EAKA,SAAOD,OAAO,CAACE,KAAR,CAAc,GAAd,CAAP;EACD;EAED;;;;AAGA,EAAO,SAASE,SAAT,CAAmBL,GAAnB,EAAwB;EAC7B,MAAMC,OAAO,GAAGD,GAAG,CAACE,OAAJ,CACd,8DADc,EAEd,OAFc,CAAhB;EAKA,SAAOD,OAAO,CAACE,KAAR,CAAc,GAAd,CAAP;EACD;;EC7BD;;;;;;;;;EAQA,SAASG,KAAT,CAAeC,KAAf,EAAsB;EACpB,MAAMP,GAAG,GAAG,CAACO,KAAD,GAAS,EAAT,GAAcA,KAA1B;;EACA,MAAMN,OAAO,GAAGG,SAAS,CAACJ,GAAD,CAAT,CAAeQ,IAAf,CAAoB,EAApB,CAAhB;;EAEA,MAAIP,OAAO,CAACQ,MAAR,GAAiB,CAAjB,IAAsBR,OAAO,CAACQ,MAAR,GAAiB,CAA3C,EAA8C;EAC5C,WAAO,KAAP;EACD;;EAED,SAAO,gCAAgCC,IAAhC,CAAqCT,OAArC,CAAP;EACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCnBYU,QAAQ,GAAG;EACtBC,EAAAA,GAAG,EAAE,gCADiB;EAEtBC,EAAAA,GAAG,EAAE,gBAFiB;EAGtBC,EAAAA,GAAG,EAAE,gBAHiB;EAItBC,EAAAA,CAAC,EAAE,+CAJmB;EAKtBC,EAAAA,EAAE,EAAE,WALkB;EAMtBC,EAAAA,EAAE,EAAE,cANkB;EAOtBC,EAAAA,GAAG,EAAE,wBAPiB;EAQtBC,EAAAA,EAAE,EAAE,cARkB;EAStBC,EAAAA,GAAG,EAAE,2BATiB;EAUtBC,EAAAA,GAAG,EAAE,qBAViB;EAWtBC,EAAAA,EAAE,EAAE,uBAXkB;EAYtBC,EAAAA,GAAG,EAAE,sBAZiB;EAatBC,EAAAA,GAAG,EAAE,uBAbiB;EActBC,EAAAA,GAAG,EAAE,sBAdiB;EAetBC,EAAAA,GAAG,EAAE,qCAfiB;EAgBtBC,EAAAA,KAAK,EAAE;EAhBe,CAAjB;;ECGP;;;;;;;;;;EASA,SAASC,SAAT,CAAmBrB,KAAnB,EAA0B;EACxB,MAAMP,GAAG,GAAG,CAACO,KAAD,GAAS,EAAT,GAAcA,KAA1B;;EADwB,uBAEJR,aAAa,CAACC,GAAD,CAFT;EAAA;EAAA,MAEjB6B,IAFiB;EAAA,MAEXC,GAFW;;EAGxB,MAAM7B,OAAO,aAAM4B,IAAN,SAAaC,GAAb,CAAb;;EAEA,MAAI7B,OAAO,CAACQ,MAAR,GAAiB,CAAjB,IAAsBR,OAAO,CAACQ,MAAR,GAAiB,CAA3C,EAA8C;EAC5C,WAAO,KAAP;EACD;;EAED,MAAI,CAACE,QAAQ,CAACkB,IAAI,CAACE,WAAL,EAAD,CAAb,EAAmC;EACjC,WAAO,KAAP;EACD;;EAED,SAAO,qCAAqCrB,IAArC,CAA0CT,OAA1C,CAAP;EACD;;ECtBD;;;;;;;;;EAQA,SAAS+B,OAAT,CAAiBzB,KAAjB,EAAwB;EACtB,MAAID,KAAK,CAACC,KAAD,CAAT,EAAkB;EAChB,WAAO,IAAP;EACD;;EAED,MAAIqB,SAAS,CAACrB,KAAD,CAAb,EAAsB;EACpB,WAAO,IAAP;EACD;;EAED,MAAMP,GAAG,GAAG,CAACO,KAAD,GAAS,EAAT,GAAcA,KAA1B;;EACA,MAAMN,OAAO,GAAGI,SAAS,CAACL,GAAD,CAAT,CAAeQ,IAAf,CAAoB,EAApB,CAAhB;;EAEA,MAAIP,OAAO,CAACQ,MAAR,KAAmB,CAAvB,EAA0B;EACxB,WAAO,KAAP;EACD;;EAED,SAAO,uCAAuCC,IAAvC,CAA4CT,OAA5C,CAAP;EACD;;ECzBD;;;;;;;;;;EASA,SAASgC,UAAT,CAAoB1B,KAApB,EAA2B;EACzB,MAAMP,GAAG,GAAG,CAACO,KAAD,GAAS,EAAT,GAAcA,KAA1B;;EAEA,MAAID,KAAK,CAACN,GAAD,CAAL,KAAe,IAAnB,EAAyB;EAAA,qBACDI,SAAS,CAACJ,GAAD,CADR;EAAA;EAAA,QACZkC,OADY;;EAEvB,WAAOA,OAAP;EACD,GAHD,MAGO,IAAIF,OAAO,CAAChC,GAAD,CAAX,EAAkB;EAAA,qBACHK,SAAS,CAACL,GAAD,CADN;EAAA;EAAA,QACdkC,QADc;;EAEvB,WAAOA,QAAP;EACD;;EAED,SAAO,IAAP;EACD;;ECpBD;;;;;;;;;;EASA,SAASC,SAAT,CAAmB5B,KAAnB,EAA0B;EACxB,MAAMP,GAAG,GAAG,CAACO,KAAD,GAAS,EAAT,GAAcA,KAA1B;EACA,MAAI6B,CAAJ;;EAEA,MAAI9B,KAAK,CAACN,GAAD,CAAL,KAAe,IAAnB,EAAyB;EAAA,qBACPI,SAAS,CAACJ,GAAD,CADF;EAAA;EAAA,QACd8B,GADc;;EAEvBM,IAAAA,CAAC,GAAGN,GAAJ;EACD,GAHD,MAGO,IAAIF,SAAS,CAAC5B,GAAD,CAAT,KAAmB,IAAvB,EAA6B;EAAA,yBAClBD,aAAa,CAACC,GAAD,CADK;EAAA;EAAA,QACzB8B,IADyB;;EAElCM,IAAAA,CAAC,GAAGN,IAAJ;EACD,GAHM,MAGA,IAAIE,OAAO,CAAChC,GAAD,CAAX,EAAkB;EAAA,qBACTK,SAAS,CAACL,GAAD,CADA;EAAA;EAAA,QAChB8B,KADgB;;EAEvBM,IAAAA,CAAC,GAAGN,KAAJ;EACD,GAHM,MAGA;EACL,WAAO,IAAP;EACD;;EAED,SAAOO,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAAR,CACJE,QADI,GAEJC,QAFI,CAEK,CAFL,EAEQ,GAFR,CAAP;EAGD;;EC9BD;;;;;;;;;EAQA,SAASC,cAAT,CAAwBjC,KAAxB,EAA+B;EAC7B,MAAMP,GAAG,GAAG,CAACO,KAAD,GAAS,EAAT,GAAcA,KAA1B;;EAEA,MAAI,CAACqB,SAAS,CAAC5B,GAAD,CAAd,EAAqB;EACnB,WAAO,IAAP;EACD;;EAL4B,uBAOdD,aAAa,CAACC,GAAD,CAPC;EAAA;EAAA,MAOtB6B,IAPsB;;EAS7B,SAAOA,IAAI,GAAIlB,QAAQ,CAACkB,IAAI,CAACE,WAAL,EAAD,CAAR,GAA+BF,IAAI,CAACE,WAAL,EAA/B,GAAoD,IAAxD,GAAgE,IAA3E;EACD;;ECnBD;;;;;;;;;EAQA,SAASU,cAAT,CAAwBlC,KAAxB,EAA+B;EAC7B,MAAMP,GAAG,GAAG,CAACO,KAAD,GAAS,EAAT,GAAcA,KAA1B;EACA,MAAMsB,IAAI,GAAGW,cAAc,CAACxC,GAAD,CAA3B;EAEA,SAAO6B,IAAI,GAAGlB,QAAQ,CAACkB,IAAI,CAACE,WAAL,EAAD,CAAX,GAAkC,IAA7C;EACD;;MChBYW,SAAS,GAAG;EACvBC,EAAAA,CAAC,EAAE,sBADoB;EAEvBC,EAAAA,EAAE,EAAE,sBAFmB;EAGvBC,EAAAA,EAAE,EAAE,qBAHmB;EAIvBC,EAAAA,EAAE,EAAE,mBAJmB;EAKvBC,EAAAA,CAAC,EAAE,uBALoB;EAMvBC,EAAAA,EAAE,EAAE,qBANmB;EAOvBC,EAAAA,EAAE,EAAE,QAPmB;EAQvBC,EAAAA,EAAE,EAAE,oBARmB;EASvBC,EAAAA,CAAC,EAAE,sBAToB;EAUvBC,EAAAA,EAAE,EAAE,mBAVmB;EAWvBC,EAAAA,EAAE,EAAE,qBAXmB;EAYvBC,EAAAA,EAAE,EAAE,OAZmB;EAavBC,EAAAA,EAAE,EAAE,qBAbmB;EAcvBC,EAAAA,EAAE,EAAE,yBAdmB;EAevBC,EAAAA,EAAE,EAAE,UAfmB;EAgBvBC,EAAAA,EAAE,EAAE,oBAhBmB;EAiBvBC,EAAAA,EAAE,EAAE,OAjBmB;EAkBvBC,EAAAA,EAAE,EAAE,wBAlBmB;EAmBvBC,EAAAA,EAAE,EAAE,iBAnBmB;EAoBvBC,EAAAA,EAAE,EAAE,oBApBmB;EAqBvBC,EAAAA,EAAE,EAAE,qBArBmB;EAsBvBC,EAAAA,EAAE,EAAE,yBAtBmB;EAuBvBC,EAAAA,CAAC,EAAE,oBAvBoB;EAwBvBC,EAAAA,EAAE,EAAE,oBAxBmB;EAyBvBC,EAAAA,EAAE,EAAE,MAzBmB;EA0BvBC,EAAAA,CAAC,EAAE,kBA1BoB;EA2BvBC,EAAAA,CAAC,EAAE,oBA3BoB;EA4BvBC,EAAAA,EAAE,EAAE,kBA5BmB;EA6BvBC,EAAAA,EAAE,EAAE,SA7BmB;EA8BvBC,EAAAA,EAAE,EAAE,UA9BmB;EA+BvBC,EAAAA,EAAE,EAAE,kBA/BmB;EAgCvBC,EAAAA,CAAC,EAAE,qBAhCoB;EAiCvBC,EAAAA,EAAE,EAAE,oBAjCmB;EAkCvBC,EAAAA,EAAE,EAAE,SAlCmB;EAmCvBC,EAAAA,EAAE,EAAE,kBAnCmB;EAoCvBC,EAAAA,EAAE,EAAE,SApCmB;EAqCvBC,EAAAA,CAAC,EAAE,QArCoB;EAsCvBC,EAAAA,EAAE,EAAE,qBAtCmB;EAuCvBC,EAAAA,CAAC,EAAE,sBAvCoB;EAwCvBC,EAAAA,EAAE,EAAE,gBAxCmB;EAyCvBC,EAAAA,EAAE,EAAE,wBAzCmB;EA0CvBC,EAAAA,EAAE,EAAE,UA1CmB;EA2CvBC,EAAAA,CAAC,EAAE,WA3CoB;EA4CvBC,EAAAA,EAAE,EAAE,uBA5CmB;EA6CvBC,EAAAA,EAAE,EAAE,qBA7CmB;EA8CvBC,EAAAA,EAAE,EAAE,qBA9CmB;EA+CvBC,EAAAA,EAAE,EAAE,mBA/CmB;EAgDvBC,EAAAA,EAAE,EAAE,UAhDmB;EAiDvBC,EAAAA,CAAC,EAAE,uBAjDoB;EAkDvBC,EAAAA,EAAE,EAAE,oBAlDmB;EAmDvBC,EAAAA,EAAE,EAAE,oCAnDmB;EAoDvBC,EAAAA,EAAE,EAAE,oBApDmB;EAqDvBC,EAAAA,CAAC,EAAE,sBArDoB;EAsDvBC,EAAAA,EAAE,EAAE,wBAtDmB;EAuDvBC,EAAAA,EAAE,EAAE,SAvDmB;EAwDvBC,EAAAA,CAAC,EAAE,sBAxDoB;EAyDvBC,EAAAA,EAAE,EAAE;EAzDmB,CAAlB;;ECIP;;;;;;;;;EAQA,SAASC,eAAT,CAAyB7F,KAAzB,EAAgC;EAC9B,MAAMP,GAAG,GAAG,CAACO,KAAD,GAAS,EAAT,GAAcA,KAA1B;;EAEA,MAAI,CAACD,KAAK,CAACN,GAAD,CAAV,EAAiB;EACf,WAAO,IAAP;EACD;;EAL6B,mBAOfI,SAAS,CAACJ,GAAD,CAPM;EAAA;EAAA,MAOvB6B,IAPuB;;EAS9B,SAAOA,IAAI,GAAIa,SAAS,CAACb,IAAI,CAACE,WAAL,EAAD,CAAT,GAAgCF,IAAI,CAACE,WAAL,EAAhC,GAAqD,IAAzD,GAAiE,IAA5E;EACD;;ECnBD;;;;;;;;;EAQA,SAASsE,eAAT,CAAyB9F,KAAzB,EAAgC;EAC9B,MAAMP,GAAG,GAAG,CAACO,KAAD,GAAS,EAAT,GAAcA,KAA1B;EACA,MAAMsB,IAAI,GAAGuE,eAAe,CAACpG,GAAD,CAA5B;EAEA,SAAO6B,IAAI,GAAGa,SAAS,CAACb,IAAI,CAACE,WAAL,EAAD,CAAZ,GAAmC,IAA9C;EACD;;ECND,SAASuE,SAAT,CAAmBtG,GAAnB,EAAwB;EACtB,MAAMuG,MAAM,GAAG,EAAf;EACAA,EAAAA,MAAM,CAACjG,KAAP,GAAe,KAAf;EACAiG,EAAAA,MAAM,CAACC,YAAP,GAAsB,IAAtB;EACAD,EAAAA,MAAM,CAACE,YAAP,GAAsB,IAAtB;EACAF,EAAAA,MAAM,CAACG,WAAP,GAAqB,IAArB;EACAH,EAAAA,MAAM,CAACI,WAAP,GAAqB,IAArB;EACAJ,EAAAA,MAAM,CAACrE,OAAP,GAAiBD,UAAU,CAACjC,GAAD,CAA3B;EACAuG,EAAAA,MAAM,CAACK,MAAP,GAAgBzE,SAAS,CAACnC,GAAD,CAAzB;EACA,SAAOuG,MAAP;EACD;;EAED,SAASM,SAAT,CAAmB7G,GAAnB,EAAwB;EACtB,MAAMuG,MAAM,GAAG,EAAf;EACAA,EAAAA,MAAM,CAACjG,KAAP,GAAe,IAAf;EACAiG,EAAAA,MAAM,CAACC,YAAP,GAAsBH,eAAe,CAACrG,GAAD,CAArC;EACAuG,EAAAA,MAAM,CAACE,YAAP,GAAsBL,eAAe,CAACpG,GAAD,CAArC;EACAuG,EAAAA,MAAM,CAACG,WAAP,GAAqB,IAArB;EACAH,EAAAA,MAAM,CAACI,WAAP,GAAqB,IAArB;EACAJ,EAAAA,MAAM,CAACrE,OAAP,GAAiBD,UAAU,CAACjC,GAAD,CAA3B;EACAuG,EAAAA,MAAM,CAACK,MAAP,GAAgBzE,SAAS,CAACnC,GAAD,CAAzB;EACA,SAAOuG,MAAP;EACD;;EAED,SAASO,aAAT,CAAuB9G,GAAvB,EAA4B;EAC1B,MAAMuG,MAAM,GAAG,EAAf;EACAA,EAAAA,MAAM,CAACjG,KAAP,GAAe,KAAf;EACAiG,EAAAA,MAAM,CAACC,YAAP,GAAsB,IAAtB;EACAD,EAAAA,MAAM,CAACE,YAAP,GAAsB,IAAtB;EACAF,EAAAA,MAAM,CAACG,WAAP,GAAqBlE,cAAc,CAACxC,GAAD,CAAnC;EACAuG,EAAAA,MAAM,CAACI,WAAP,GAAqBlE,cAAc,CAACzC,GAAD,CAAnC;EACAuG,EAAAA,MAAM,CAACrE,OAAP,GAAiB,IAAjB;EACAqE,EAAAA,MAAM,CAACK,MAAP,GAAgBzE,SAAS,CAACnC,GAAD,CAAzB;EACAuG,EAAAA,MAAM,CAAC3E,SAAP,GAAmB,IAAnB;EACA,SAAO2E,MAAP;EACD;EAED;;;;;;;;;;;EASA,SAASQ,KAAT,CAAexG,KAAf,EAAsB;EACpB,MAAMP,GAAG,GAAG,CAACO,KAAD,GAAS,EAAT,GAAcA,KAA1B;EACA,MAAMgG,MAAM,GAAG;EACb3E,IAAAA,SAAS,EAAE,KADE;;EAAA,GAAf;;EAIA,MAAItB,KAAK,CAACN,GAAD,CAAL,KAAe,IAAnB,EAAyB;EACvB,6BACKuG,MADL,EAEKM,SAAS,CAAC7G,GAAD,CAFd;EAID,GALD,MAKO,IAAI4B,SAAS,CAAC5B,GAAD,CAAT,KAAmB,IAAvB,EAA6B;EAClC,6BACKuG,MADL,EAEKO,aAAa,CAAC9G,GAAD,CAFlB;EAID,GALM,MAKA,IAAIgC,OAAO,CAAChC,GAAD,CAAP,KAAiB,IAArB,EAA2B;EAChC,6BACKuG,MADL,EAEKD,SAAS,CAACtG,GAAD,CAFd;EAID;;EAED,SAAO,IAAP;EACD;;;;;;;;;;;;;;;;;;;;;;;"}
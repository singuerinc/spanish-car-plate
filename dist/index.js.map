{"version":3,"file":"index.js","sources":["../src/isValid.js","../src/isOld.js","../src/getCounter.js","../src/getNumber.js","../src/provinces.js","../src/getProvinceCode.js","../src/getProvinceName.js","../src/parse.js"],"sourcesContent":["/**\n * Returns true if is a valid (post year 2000) car plate\n * @param {string} value\n * @returns {boolean}\n * @since 0.0.1\n * @example\n * isValid(\"2345BCF\"); // => true\n */\nfunction isValid(value) {\n  const str = !value ? \"\" : value;\n  const cleaned = str.replace(\n    /^[\\s]*([0-9]{4})[^A-Z0-9]*([BCDFGHJKLMNPRSTVWXYZ]{3})[\\s]*$/i,\n    \"$1$2\"\n  );\n\n  if (cleaned.length !== 7) {\n    return false;\n  }\n\n  return /^[0-9]{4}[BCDFGHJKLMNPRSTVWXYZ]{3}$/i.test(cleaned);\n}\n\nexport { isValid };\n","/**\n * Returns true if is a valid (old system 1971-2000) car plate\n * @param {string} value\n * @returns {boolean}\n * @since 0.0.2\n * @example\n * isOld(\"GI-1234-CS\"); // => true\n */\nfunction isOld(value) {\n  const str = !value ? \"\" : value;\n  const cleaned = str.replace(\n    /^[\\s]*([A-Z]{1,3})[^A-Z0-9]*([0-9]{4})[^A-Z0-9]*([A-Z]{2})[\\s]*$/i,\n    \"$1$2$3\"\n  );\n\n  if (cleaned.length < 7 || cleaned.length > 9) {\n    return false;\n  }\n\n  return /^[A-Z]{1,3}[0-9]{4}[A-Z]{2}$/i.test(cleaned);\n}\n\nexport { isOld };\n","import { isOld } from \"./isOld\";\nimport { isValid } from \"./isValid\";\n\n/**\n *\n * @param {string} value\n * @returns {string}\n * @since 0.0.5\n * @example\n * getCounter(\"GI-1234-CS\"); // => \"CS\"\n * getCounter(\"2345BCF\"); // => \"CS\"\n */\nfunction getCounter(value) {\n  const str = !value ? \"\" : value;\n\n  if (isOld(str) === true) {\n    const cleaned = str.replace(\n      /^[\\s]*([A-Z]{1,3})[^A-Z0-9]*([0-9]{4})[^A-Z0-9]*([A-Z]{2})[\\s]*$/i,\n      \"$3\"\n    );\n\n    if (cleaned.length !== 2) {\n      return null;\n    }\n\n    return cleaned;\n  } else if (isValid(str)) {\n    const cleaned = str.replace(\n      /^[\\s]*([0-9]{4})[^A-Z0-9]*([BCDFGHJKLMNPRSTVWXYZ]{3})[\\s]*$/i,\n      \"$2\"\n    );\n\n    if (cleaned.length !== 3) {\n      return null;\n    }\n\n    return cleaned;\n  }\n\n  return null;\n}\n\nexport { getCounter };\n","import { isOld } from \"./isOld\";\nimport { isValid } from \"./isValid\";\n\n/**\n *\n * @param {string} value\n * @returns {number}\n * @since 0.0.5\n * @example\n * getNumber(\"GI-1234-CS\"); // => 1234\n * getNumber(\"2345BCF\"); // => 2345\n */\nfunction getNumber(value) {\n  const str = !value ? \"\" : value;\n\n  if (isOld(str) === true) {\n    const cleaned = str.replace(\n      /^[\\s]*([A-Z]{1,3})[^A-Z0-9]*([0-9]{4})[^A-Z0-9]*([A-Z]{2})[\\s]*$/i,\n      \"$2\"\n    );\n\n    if (cleaned.length !== 4) {\n      return null;\n    }\n\n    return parseInt(cleaned, 10);\n  } else if (isValid(str)) {\n    const cleaned = str.replace(\n      /^[\\s]*([0-9]{4})[^A-Z0-9]*([BCDFGHJKLMNPRSTVWXYZ]{3})[\\s]*$/i,\n      \"$1\"\n    );\n\n    if (cleaned.length !== 4) {\n      return null;\n    }\n\n    return parseInt(cleaned, 10);\n  }\n\n  return null;\n}\n\nexport { getNumber };\n","export const PROVINCES = {\n  A: \"Province of Alicante\",\n  AB: \"Province of Albacete\",\n  AL: \"Province of Almería\",\n  AV: \"Province of Ávila\",\n  B: \"Province of Barcelona\",\n  BA: \"Province of Badajoz\",\n  BI: \"Bilbao\",\n  BU: \"Province of Burgos\",\n  C: \"Province of A Coruña\",\n  CA: \"Province of Cádiz\",\n  CC: \"Province of Cáceres\",\n  CE: \"Ceuta\",\n  CO: \"Province of Córdoba\",\n  CR: \"Province of Ciudad Real\",\n  CS: \"Castelló\",\n  CU: \"Province of Cuenca\",\n  FP: \"Bioko\",\n  GC: \"Province of Las Palmas\",\n  GE: \"Gerona (Girona)\",\n  GI: \"Province of Girona\",\n  GR: \"Province of Granada\",\n  GU: \"Province of Guadalajara\",\n  H: \"Province of Huelva\",\n  HU: \"Province of Huesca\",\n  IF: \"Ifni\",\n  J: \"Province of Jaén\",\n  L: \"Province of Lleida\",\n  LE: \"Province of León\",\n  LO: \"Logroño\",\n  LR: \"La Rioja\",\n  LU: \"Province of Lugo\",\n  M: \"Community of Madrid\",\n  MA: \"Province of Málaga\",\n  ML: \"Melilla\",\n  MU: \"Region of Murcia\",\n  NA: \"Navarre\",\n  O: \"Oviedo\",\n  OU: \"Province of Ourense\",\n  P: \"Province of Palencia\",\n  PM: \"Palma, Majorca\",\n  PO: \"Province of Pontevedra\",\n  RM: \"Rio Muni\",\n  S: \"Santander\",\n  SA: \"Province of Salamanca\",\n  SE: \"Province of Seville\",\n  SG: \"Province of Segovia\",\n  SO: \"Province of Soria\",\n  SS: \"Donostia\",\n  T: \"Province of Tarragona\",\n  TE: \"Province of Teruel\",\n  TF: \"Province of Santa Cruz de Tenerife\",\n  TO: \"Province of Toledo\",\n  V: \"Province of Valencia\",\n  VA: \"Province of Valladolid\",\n  VI: \"Vitoria\",\n  Z: \"Province of Zaragoza\",\n  ZA: \"Province of Zamora\"\n};\n","import { PROVINCES } from \"./provinces\";\nimport { isOld } from \"./isOld\";\n\n/**\n * Returns the province code for a valid car plate in the old system (1971-2000)\n * @param {string} value\n * @returns {string}\n * @since 0.0.5\n * @example\n * getProvinceCode(\"GI-1234-CS\"); // => \"GI\"\n */\nfunction getProvinceCode(value) {\n  const str = !value ? \"\" : value;\n\n  if (!isOld(str)) {\n    return null;\n  }\n\n  const code = str.replace(\n    /^[\\s]*([A-Z]{1,3})[^A-Z0-9]*([0-9]{4})[^A-Z0-9]*([A-Z]{2})[\\s]*$/i,\n    \"$1\"\n  );\n\n  return PROVINCES[code] ? code : null;\n}\n\nexport { getProvinceCode };\n","import { PROVINCES } from \"./provinces\";\nimport { getProvinceCode } from \"./getProvinceCode\";\n\n/**\n * Returns the province name for a valid car plate in the old system (1971-2000)\n * @param {string} value\n * @returns {string}\n * @since 0.0.3\n * @example\n * getProvinceName(\"GI-1234-CS\"); // => \"Province of Girona\"\n */\nfunction getProvinceName(value) {\n  const str = !value ? \"\" : value;\n  const code = getProvinceCode(str);\n\n  return PROVINCES[code] || null;\n}\n\nexport { getProvinceName };\n","import { isValid } from \"./isValid\";\nimport { isOld } from \"./isOld\";\nimport { getProvinceName } from \"./getProvinceName\";\nimport { getProvinceCode } from \"./getProvinceCode\";\nimport { getCounter } from \"./getCounter\";\nimport { getNumber } from \"./getNumber\";\n\n/**\n * Returns an object containing information about the plate\n * @param {string} value\n * @returns {boolean}\n * @since 0.0.5\n * @example\n * parse(\"2345BCF\"); // => { isSpecial: false, isOld: false, number: 2345, counter: \"BCF\" }\n * parse(\"GI2345BC\"); // => { isSpecial: false, isOld: true, provinceCode: \"GI\", provinceName: \"Province of Girona\", number: 2345, counter: \"BC\" }\n */\nfunction parse(value) {\n  const str = !value ? \"\" : value;\n  const old = isOld(str);\n  const parsed = {\n    isSpecial: false // TODO: not implemented\n  };\n\n  if (old === true) {\n    parsed.isOld = true;\n    const provinceName = getProvinceName(str);\n    const provinceCode = getProvinceCode(str);\n    parsed.provinceName = provinceName;\n    parsed.provinceCode = provinceCode;\n    parsed.counter = getCounter(str);\n    parsed.number = getNumber(str);\n    return parsed;\n  } else if (isValid(str) === true) {\n    parsed.isOld = false;\n    parsed.counter = getCounter(str);\n    parsed.number = getNumber(str);\n    return parsed;\n  }\n\n  return null;\n}\n\nexport { parse };\n"],"names":["isValid","value","str","cleaned","replace","length","test","isOld","getCounter","getNumber","parseInt","PROVINCES","A","AB","AL","AV","B","BA","BI","BU","C","CA","CC","CE","CO","CR","CS","CU","FP","GC","GE","GI","GR","GU","H","HU","IF","J","L","LE","LO","LR","LU","M","MA","ML","MU","NA","O","OU","P","PM","PO","RM","S","SA","SE","SG","SO","SS","T","TE","TF","TO","V","VA","VI","Z","ZA","getProvinceCode","code","getProvinceName","parse","old","parsed","isSpecial","provinceName","provinceCode","counter","number"],"mappings":"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"}
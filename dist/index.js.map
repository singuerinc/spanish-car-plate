{"version":3,"file":"index.js","sources":["../src/_utils.js","../src/isOld.js","../src/isValid.js","../src/getCounter.js","../src/getNumber.js","../src/provinces.js","../src/getProvinceCode.js","../src/getProvinceName.js","../src/parse.js"],"sourcesContent":["export function _partsOld(str) {\n  const cleaned = str.replace(\n    /^[\\s]*([A-Z]{1,3})[^A-Z0-9]*([0-9]{4})[^A-Z0-9]*([A-Z]{2})[\\s]*$/i,\n    \"$1,$2,$3\"\n  );\n\n  return cleaned.split(\",\");\n}\n\nexport function _partsNew(str) {\n  const cleaned = str.replace(\n    /^[\\s]*([0-9]{4})[^A-Z0-9]*([BCDFGHJKLMNPRSTVWXYZ]{3})[\\s]*$/i,\n    \"$1,$2\"\n  );\n\n  return cleaned.split(\",\");\n}\n","import { _partsOld } from \"./_utils\";\n\n/**\n * Returns true if is a valid (old system 1971-2000) car plate\n * @param {string} value\n * @returns {boolean}\n * @since 0.0.2\n * @example\n * isOld(\"GI-1234-CS\"); // => true\n */\nfunction isOld(value) {\n  const str = !value ? \"\" : value;\n  const cleaned = _partsOld(str).join(\"\");\n\n  if (cleaned.length < 7 || cleaned.length > 9) {\n    return false;\n  }\n\n  return /^[A-Z]{1,3}[0-9]{4}[A-Z]{2}$/i.test(cleaned);\n}\n\nexport { isOld };\n","import { _partsNew } from \"./_utils\";\nimport { isOld } from \"./isOld\";\n\n/**\n * Returns true if is a valid (post year 2000) car plate\n * @param {string} value\n * @returns {boolean}\n * @since 0.0.1\n * @example\n * isValid(\"2345BCF\"); // => true\n */\nfunction isValid(value) {\n  if (isOld(value)) {\n    return true;\n  }\n\n  const str = !value ? \"\" : value;\n  const cleaned = _partsNew(str).join(\"\");\n\n  if (cleaned.length !== 7) {\n    return false;\n  }\n\n  return /^[0-9]{4}[BCDFGHJKLMNPRSTVWXYZ]{3}$/i.test(cleaned);\n}\n\nexport { isValid };\n","import { isOld } from \"./isOld\";\nimport { isValid } from \"./isValid\";\nimport { _partsOld, _partsNew } from \"./_utils\";\n\n/**\n *\n * @param {string} value\n * @returns {string}\n * @since 0.0.5\n * @example\n * getCounter(\"GI-1234-CS\"); // => \"CS\"\n * getCounter(\"2345BCF\"); // => \"CS\"\n */\nfunction getCounter(value) {\n  const str = !value ? \"\" : value;\n\n  if (isOld(str) === true) {\n    const [, , counter] = _partsOld(str);\n    return counter;\n  } else if (isValid(str)) {\n    const [, counter] = _partsNew(str);\n    return counter;\n  }\n\n  return null;\n}\n\nexport { getCounter };\n","import { isOld } from \"./isOld\";\nimport { isValid } from \"./isValid\";\nimport { _partsNew, _partsOld } from \"./_utils\";\n\n/**\n *\n * @param {string} value\n * @returns {number}\n * @since 0.0.5\n * @example\n * getNumber(\"2345BCF\"); // => 2345\n * getNumber(\"GI-1234-CS\"); // => 1234\n */\nfunction getNumber(value) {\n  const str = !value ? \"\" : value;\n\n  if (isOld(str) === true) {\n    const [, num] = _partsOld(str);\n    return parseInt(num, 10);\n  } else if (isValid(str)) {\n    const [num] = _partsNew(str);\n    return parseInt(num, 10);\n  }\n\n  return null;\n}\n\nexport { getNumber };\n","export const PROVINCES = {\n  A: \"Province of Alicante\",\n  AB: \"Province of Albacete\",\n  AL: \"Province of Almería\",\n  AV: \"Province of Ávila\",\n  B: \"Province of Barcelona\",\n  BA: \"Province of Badajoz\",\n  BI: \"Bilbao\",\n  BU: \"Province of Burgos\",\n  C: \"Province of A Coruña\",\n  CA: \"Province of Cádiz\",\n  CC: \"Province of Cáceres\",\n  CE: \"Ceuta\",\n  CO: \"Province of Córdoba\",\n  CR: \"Province of Ciudad Real\",\n  CS: \"Castelló\",\n  CU: \"Province of Cuenca\",\n  FP: \"Bioko\",\n  GC: \"Province of Las Palmas\",\n  GE: \"Gerona (Girona)\",\n  GI: \"Province of Girona\",\n  GR: \"Province of Granada\",\n  GU: \"Province of Guadalajara\",\n  H: \"Province of Huelva\",\n  HU: \"Province of Huesca\",\n  IF: \"Ifni\",\n  J: \"Province of Jaén\",\n  L: \"Province of Lleida\",\n  LE: \"Province of León\",\n  LO: \"Logroño\",\n  LR: \"La Rioja\",\n  LU: \"Province of Lugo\",\n  M: \"Community of Madrid\",\n  MA: \"Province of Málaga\",\n  ML: \"Melilla\",\n  MU: \"Region of Murcia\",\n  NA: \"Navarre\",\n  O: \"Oviedo\",\n  OU: \"Province of Ourense\",\n  P: \"Province of Palencia\",\n  PM: \"Palma, Majorca\",\n  PO: \"Province of Pontevedra\",\n  RM: \"Rio Muni\",\n  S: \"Santander\",\n  SA: \"Province of Salamanca\",\n  SE: \"Province of Seville\",\n  SG: \"Province of Segovia\",\n  SO: \"Province of Soria\",\n  SS: \"Donostia\",\n  T: \"Province of Tarragona\",\n  TE: \"Province of Teruel\",\n  TF: \"Province of Santa Cruz de Tenerife\",\n  TO: \"Province of Toledo\",\n  V: \"Province of Valencia\",\n  VA: \"Province of Valladolid\",\n  VI: \"Vitoria\",\n  Z: \"Province of Zaragoza\",\n  ZA: \"Province of Zamora\"\n};\n","import { PROVINCES } from \"./provinces\";\nimport { isOld } from \"./isOld\";\nimport { _partsOld } from \"./_utils\";\n\n/**\n * Returns the province code for a valid car plate in the old system (1971-2000)\n * @param {string} value\n * @returns {string}\n * @since 0.0.5\n * @example\n * getProvinceCode(\"GI-1234-CS\"); // => \"GI\"\n */\nfunction getProvinceCode(value) {\n  const str = !value ? \"\" : value;\n\n  if (!isOld(str)) {\n    return null;\n  }\n\n  const [code] = _partsOld(str);\n\n  return PROVINCES[code] ? code : null;\n}\n\nexport { getProvinceCode };\n","import { PROVINCES } from \"./provinces\";\nimport { getProvinceCode } from \"./getProvinceCode\";\n\n/**\n * Returns the province name for a valid car plate in the old system (1971-2000)\n * @param {string} value\n * @returns {string}\n * @since 0.0.5\n * @example\n * getProvinceName(\"GI-1234-CS\"); // => \"Province of Girona\"\n */\nfunction getProvinceName(value) {\n  const str = !value ? \"\" : value;\n  const code = getProvinceCode(str);\n\n  return PROVINCES[code] || null;\n}\n\nexport { getProvinceName };\n","import { isValid } from \"./isValid\";\nimport { isOld } from \"./isOld\";\nimport { getProvinceName } from \"./getProvinceName\";\nimport { getProvinceCode } from \"./getProvinceCode\";\nimport { getCounter } from \"./getCounter\";\nimport { getNumber } from \"./getNumber\";\n\nfunction _parseNew(str) {\n  const parsed = {};\n  parsed.isOld = false;\n  parsed.counter = getCounter(str);\n  parsed.number = getNumber(str);\n  return parsed;\n}\n\nfunction _parseOld(str) {\n  const parsed = {};\n  parsed.isOld = true;\n  const provinceName = getProvinceName(str);\n  const provinceCode = getProvinceCode(str);\n  parsed.provinceName = provinceName;\n  parsed.provinceCode = provinceCode;\n  parsed.counter = getCounter(str);\n  parsed.number = getNumber(str);\n  return parsed;\n}\n\n/**\n * Returns an object containing information about the plate\n * @param {string} value\n * @returns {boolean}\n * @since 0.0.5\n * @example\n * parse(\"2345BCF\"); // => { isSpecial: false, isOld: false, provinceCode: null, provinceName: null, number: 2345, counter: \"BCF\" }\n * parse(\"GI2345BC\"); // => { isSpecial: false, isOld: true, provinceCode: \"GI\", provinceName: \"Province of Girona\", number: 2345, counter: \"BC\" }\n */\nfunction parse(value) {\n  const str = !value ? \"\" : value;\n  const old = isOld(str);\n  const parsed = {\n    isSpecial: false // TODO: not implemented\n  };\n\n  if (old === true) {\n    return {\n      ...parsed,\n      ..._parseOld(str)\n    };\n  } else if (isValid(str) === true) {\n    return {\n      ...parsed,\n      ..._parseNew(str)\n    };\n  }\n\n  return null;\n}\n\nexport { parse };\n"],"names":["_partsOld","str","cleaned","replace","split","_partsNew","isOld","value","join","length","test","isValid","getCounter","counter","getNumber","num","parseInt","PROVINCES","A","AB","AL","AV","B","BA","BI","BU","C","CA","CC","CE","CO","CR","CS","CU","FP","GC","GE","GI","GR","GU","H","HU","IF","J","L","LE","LO","LR","LU","M","MA","ML","MU","NA","O","OU","P","PM","PO","RM","S","SA","SE","SG","SO","SS","T","TE","TF","TO","V","VA","VI","Z","ZA","getProvinceCode","code","getProvinceName","_parseNew","parsed","number","_parseOld","provinceName","provinceCode","parse","old","isSpecial"],"mappings":"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"}